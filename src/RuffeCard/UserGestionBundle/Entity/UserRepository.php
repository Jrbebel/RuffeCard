<?php

namespace RuffeCard\UserGestionBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EntrepriseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository {
	
	public function FindUser($term, $acteur) {
		
		if ($acteur == 2) {
			$fonction = 1;
		} elseif ($acteur == 3) {
			$fonction = 2;
		}
		$qb = $this->createQueryBuilder ( 'c' );
		$qb->select ( 'c.id,c.nom,c.prenom' )->where ( 'c.nom LIKE :term' )->andwhere ( 'c.Fonction = :fonction' )->setParameter ( 'term', $term . '%' )->setParameter ( 'fonction', $fonction )->setMaxResults ( 10 );
		$arrayAss = $qb->getQuery ()->getArrayResult ();
		$array = array ();
		foreach ( $arrayAss as $data ) {
			
			$array [$data ['id']] = $data ['nom'] . " " . $data ['prenom'];
		}
		return $array;
	}
	
	/**
	 * Permet de calculer le nombre d'acteur passÃ© en parametre
	 *
	 * *
	 */
	public function findAllActeur($fonction) {
		$from = "RuffeCardUserGestionBundle:User";
		$alias = "p";
		$flag = true;
		$qb = $this->_em->createQueryBuilder ()->select ( 'p' )->from ( $from, $alias )->
		
		where ( 'p.Fonction = :acteur' )->andwhere ( 'p.paiement  is not NULL' )
		->setParameter ( 'acteur', $fonction );
		

		
		return $qb->getQuery ()->getResult ();
	}
	
	public function FindUserAction($type, $id) {
		
		$from = "RuffeCardUserGestionBundle:User";
		$alias = "p";
		$flag = true;
		$qb = $this->_em->createQueryBuilder ()->select ( 'p' )->from ( $from, $alias )->where ( 'p.Fonction = :type' )->setParameter ( 'type', $type )->andwhere ( 'p.id =: id ' )->setParameter ( 'id', $id );
		
		return $qb->getQuery ()->getResult ();
	}
	
	
	public function FindUserCommercial($email){
		
		$from = "RuffeCardUserGestionBundle:User";
		$alias = "p";

		$qb = $this->_em->createQueryBuilder ()->select ( 'p' )->from ( $from, $alias )->where ( 'p.Email = :Email' )->setParameter ( 'Email', $email );
		
		return $qb->getQuery ()->getResult ();
	}
	
	public function findClientNoPaiment($fonction){
	
		$from = "RuffeCardUserGestionBundle:User";
		$alias = "p";
	
		$qb = $this->_em->createQueryBuilder ()
		->select ( 'p' )
		->from ( $from, $alias )
		->where ( 'p.paiement  is NULL' )
		->andwhere('p.Fonction = :fonction')
		->setParameter('fonction',$fonction)
		;
	
	
		return $qb->getQuery ()->getResult ();
	
	
	}
	public function FindCommercial($term) {
	
		
			$fonction = 1;
	
	
		$qb = $this->createQueryBuilder ( 'c' );
		$qb->select ( 'c.id,c.nom,c.prenom' )->where ( 'c.nom LIKE :term' )->andwhere ( 'c.Fonction = :fonction' )->setParameter ( 'term', $term . '%' )->setParameter ( 'fonction', $fonction )->setMaxResults ( 10 );
		$arrayAss = $qb->getQuery ()->getArrayResult ();
		$array = array ();
		foreach ( $arrayAss as $data ) {
				
			$array [$data ['id']] = $data ['nom'] . " " . $data ['prenom'];
		}
		return $array;
	}
}
